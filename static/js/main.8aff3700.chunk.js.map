{"version":3,"sources":["components/Header/Header.tsx","components/Main/Main.tsx","App.tsx","index.tsx"],"names":["Header","className","Main","useState","billValue","setBillValue","numberOfPeople","setNumberOfPeople","tipPercentage","setTipPercentage","tipAmount","totalAmount","htmlFor","type","id","value","onChange","event","target","map","percent","onClick","handleTipPercentage","title","maxLength","min","toFixed","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAGaA,EAAkB,kBAC7B,mCACE,sBAAKC,UAAU,SAAf,UACE,oBAAIA,UAAU,eAAd,kBACA,oBAAIA,UAAU,eAAd,wB,eCJOC,G,MAAiB,WAC5B,MAAkCC,mBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA4CF,mBAAS,GAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KACA,EAA0CJ,mBAAS,GAAnD,mBAAOK,EAAP,KAAsBC,EAAtB,KAwBMC,EAAaN,GAAaI,EAAgB,KAAQF,EAClDK,GAAeP,EAAYA,GAAaI,EAAgB,MAAQF,EAEtE,OACE,uBAAML,UAAU,OAAhB,UACE,sBAAKA,UAAU,SAAf,UACE,qBAAKA,UAAU,cAAf,SACE,wBACEA,UAAU,iCACVW,QAAQ,YAFV,iBAKE,uBACEC,KAAK,SACLC,GAAG,YACHb,UAAU,0BACVc,MAAOX,EACPY,SAvCY,SAACC,GACvBZ,GAAcY,EAAMC,OAAOH,eA0CvB,qBAAKd,UAAU,qBAAf,SACE,wBAAOA,UAAU,gCAAgCW,QAAQ,MAAzD,yBAEE,sBAAKX,UAAU,aAAf,UACG,CAAC,EAAG,GAAI,GAAI,GAAI,IAAIkB,KAAI,SAAAC,GAAO,OAC9B,wBAEEP,KAAK,SACLZ,UAAU,iBACVoB,QAAS,YA5CG,SAACD,GAC3BX,EAAiBW,GA4CDE,CAAoBF,IALxB,mBAQMA,EARN,MACOA,MAUT,qBAAKnB,UAAU,oBAAf,SACE,uBACEA,UAAU,8BACVY,KAAK,OACLC,GAAG,MACHC,MAAOP,EACPe,MAAM,aACNC,UAAW,EACXR,SAvDe,SAACC,GAC9BR,GAAkBQ,EAAMC,OAAOH,oBA4D3B,qBAAKd,UAAU,gBAAf,SACE,wBAAOA,UAAU,eAAeW,QAAQ,SAAxC,6BAEE,uBACEC,KAAK,SACLC,GAAG,SACHb,UAAU,4BACVc,MAAOT,EACPU,SA7EiB,SAACC,GAC5BV,GAAmBU,EAAMC,OAAOH,QA6EtBU,IAAI,cAKZ,sBAAKxB,UAAU,UAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,mBAAGA,UAAU,kBAAb,wBACA,mBAAGA,UAAU,qBAAb,yBAEF,oBAAIA,UAAU,iBAAd,oBAAoCS,EAAUgB,QAAQ,SAExD,sBAAKzB,UAAU,gBAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,mBAAGA,UAAU,kBAAb,0BACA,mBAAGA,UAAU,qBAAb,yBAEF,oBAAIA,UAAU,iBAAd,oBAAoCU,EAAYe,QAAQ,SAE1D,wBAAQb,KAAK,SAASZ,UAAU,iBAAiBoB,QAtF7B,WACxBhB,EAAa,GACbE,EAAkB,GAClBE,EAAiB,IAmFb,2BChGOkB,EATH,WACV,OACE,sBAAK1B,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCJN2B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8aff3700.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.scss';\n\nexport const Header:React.FC = () => (\n  <>\n    <div className=\"header\">\n      <h2 className=\"header__item\">spli</h2>\n      <h2 className=\"header__item\">tter</h2>\n    </div>\n  </>\n);\n","import React, { useState } from 'react';\nimport './Main.scss';\n\nexport const Main: React.FC = () => {\n  const [billValue, setBillValue] = useState(0);\n  const [numberOfPeople, setNumberOfPeople] = useState(1);\n  const [tipPercentage, setTipPercentage] = useState(0);\n\n  const handleBillValue = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setBillValue(+event.target.value);\n  };\n\n  const handleNumberOfPeople = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNumberOfPeople(+event.target.value);\n  };\n\n  const handleTipPercentage = (percent: number) => {\n    setTipPercentage(percent);\n  };\n\n  const handleCustomPercentage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTipPercentage(+event.target.value);\n  };\n\n  const handleResetButton = () => {\n    setBillValue(0);\n    setNumberOfPeople(1);\n    setTipPercentage(0);\n  };\n\n  const tipAmount = (billValue * (tipPercentage / 100)) / numberOfPeople;\n  const totalAmount = (billValue + billValue * (tipPercentage / 100)) / numberOfPeople;\n\n  return (\n    <form className=\"form\">\n      <div className=\"fields\">\n        <div className=\"field__bill\">\n          <label\n            className=\"field__label field__bill-label\"\n            htmlFor=\"billImput\"\n          >\n            bill\n            <input\n              type=\"number\"\n              id=\"billImput\"\n              className=\"field__bill-input input\"\n              value={billValue}\n              onChange={handleBillValue}\n            />\n          </label>\n        </div>\n        <div className=\"field__tip-wrapper\">\n          <label className=\"field__label field__tip-label\" htmlFor=\"tip\">\n            select tip %\n            <div className=\"field__tip\">\n              {[5, 10, 15, 25, 50].map(percent => (\n                <button\n                  key={percent}\n                  type=\"button\"\n                  className=\"field__tip-num\"\n                  onClick={() => {\n                    handleTipPercentage(percent);\n                  }}\n                >\n                  {`${percent}%`}\n                </button>\n              ))}\n              <div className=\"field__tip-custom\">\n                <input\n                  className=\"field__tip-num custom input\"\n                  type=\"text\"\n                  id=\"tip\"\n                  value={tipPercentage}\n                  title=\"Custom tip\"\n                  maxLength={2}\n                  onChange={handleCustomPercentage}\n                />\n              </div>\n            </div>\n          </label>\n        </div>\n        <div className=\"field__people\">\n          <label className=\"field__label\" htmlFor=\"people\">\n            Number of People\n            <input\n              type=\"number\"\n              id=\"people\"\n              className=\"field__people-input input\"\n              value={numberOfPeople}\n              onChange={handleNumberOfPeople}\n              min=\"1\"\n            />\n          </label>\n        </div>\n      </div>\n      <div className=\"results\">\n        <div className=\"results__item\">\n          <div className=\"results__info\">\n            <p className=\"results__header\">tip amount</p>\n            <p className=\"results__subheader\">/ person</p>\n          </div>\n          <h1 className=\"results__value\">{`$${tipAmount.toFixed(2)}`}</h1>\n        </div>\n        <div className=\"results__item\">\n          <div className=\"results__info\">\n            <p className=\"results__header\">total amount</p>\n            <p className=\"results__subheader\">/ person</p>\n          </div>\n          <h1 className=\"results__value\">{`$${totalAmount.toFixed(2)}`}</h1>\n        </div>\n        <button type=\"button\" className=\"results__reset\" onClick={handleResetButton}>\n          reset\n        </button>\n      </div>\n    </form>\n  );\n};\n","import React from 'react';\nimport { Header } from './components/Header/Header';\nimport './App.css';\nimport { Main } from './components/Main/Main';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Main />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}